import datetime
import glob
import os
import re
import sys

def short_version(long_version):
    version_re = re.compile(r"^v?\d+(?:\.\d+)?")
    version_match = version_re.match(long_version)
    return f"v{version_match.group()}" if version_match else None 

########################################################################
# Project info
project = "@PROJ_NAME@"
project_github_org = "https://github.com/art-framework-suite/"
project_github_url = f"{project_github_org}{project}"

# Other project-specific CMake-derived information
author = "@PROJ_AUTHORS@".replace(";", ", ") or None
cetmodules_version = short_version("@cetmodules_VERSION@") or "git-develop"
cmake_version = short_version("@CMAKE_VERSION@") or "latest"

# Copyright
copyright_start = "@PROJ_COPYRIGHT_START@"
copyright_current = str(datetime.date.today().year)
copyright = "{0}, @PROJ_COPYRIGHT_OWNER@".format\
            (copyright_current if
             not copyright_start or copyright_start == copyright_current else
             "{0}â€“{1}".format(copyright_start, copyright_current))
########################################################################

########################################################################
# Basic configuration.
highlight_language = "none"
language = "en"
master_doc = "index"
manpages_url = "https://man7.org/linux/man-pages/man{section}/{page}.{section}.html"
smartquotes = True
smartquotes_action = "qDe" # quotes, en- and em-dashes, and ellipses.
source_encoding = "utf-8-sig"
source_suffix = ".rst"
suppress_warnings = "@PROJ_SUPPRESS_WARNINGS@".split(";") or None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named "sphinx.ext.*") or your custom
# ones.
extensions = [
    "breathe",
    "sphinx.ext.autodoc",
    "sphinx.ext.duration",
    "sphinx.ext.extlinks",
    "sphinx.ext.githubpages",
    "sphinx.ext.graphviz",
    "sphinx.ext.ifconfig",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "sphinx_toolbox.collapse",
    "sphinxcontrib.moderncmakedomain",
]

extlinks = {
    "project-url": (f"{project_github_url}/%s", None),
    "project-issue": (f"{project_github_url}/issues/%s", f"{project} issue #%s"),
    "project-pr": (f"{project_github_url}/pull/%s", f"{project} PR #%s")
}

nitpick_ignore = [
]

# Included at the beginning of every ReST document.
rst_prolog = f"""
.. |CMAKE_MIN_VERSION| replace:: @cetmodules_MIN_CMAKE_VERSION@
.. |project_github_org| replace:: {project_github_org}
.. |project_github_url| replace:: :project-url:`{project} <>`
.. |project| replace:: {project}
.. include:: /../prolog.rst
"""
########################################################################


########################################################################
# HTML configuration.
html_favicon = "@CMAKE_CURRENT_SOURCE_DIR@/_static/FNALssi-favicon.ico"
html_logo = "@CMAKE_CURRENT_SOURCE_DIR@/_static/FNALssi.png"

html_show_sourcelink = True
html_style="FNALssi-cpp.css"
html_theme = "sphinx_rtd_theme"
html_theme_options = {
    "bgcolor":          "#ffffff",
    "codebgcolor":      "#eeeeee",
    "codetextcolor":    "#333333",
    "footerbgcolor":    "#00182d",
    "footertextcolor":  "#ffffff",
    "headbgcolor":      "#f2f2f2",
    "headlinkcolor":    "#3d8ff2",
    "headtextcolor":    "#003564",
    "linkcolor":        "#2b63a8",
    "relbarbgcolor":    "#00529b",
    "relbarlinkcolor":  "#ffffff",
    "relbartextcolor":  "#ffffff",
    "sidebarbgcolor":   "#e4ece8",
    "sidebarbtncolor":  "#00a94f",
    "sidebarlinkcolor": "#00a94f",
    "sidebartextcolor": "#333333",
    "textcolor":        "#444444",
    "visitedlinkcolor": "#2b63a8",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [
    "@CMAKE_CURRENT_SOURCE_DIR@/_static",
    '@CMAKE_CURRENT_SOURCE_DIR@/Bootstrap/css',
    '@CMAKE_CURRENT_SOURCE_DIR@/Bootstrap/js'
]
########################################################################

########################################################################
# Extension and other configuration.

# Breathe
breathe_default_project = project
breathe_projects = { project : "@CMAKE_CURRENT_BINARY_DIR@/xml/" }

# Gettext
gettext_compact = True
gettext_uuid = False

# Graphviz
graphviz_dot_args = [
    "-Grankdir=LR",
    "-Gbgcolor=transparent",
    "-Nshape=box",
    "-Nfontname=monaco",
    "-Nfontsize=10",
]

# Intersphinx
intersphinx_mapping = {
    "cetmodules": (f"https://fnalssi.github.io/cetmodules/{cetmodules_version}", None),
    "cmake-ref-current": (f"https://cmake.org/cmake/help/{cmake_version}/", None),
    "cmake-ref-latest": ("https://cmake.org/cmake/help/latest/", None),
    "python": ("https://docs.python.org/3", None),
    "spack": (f"https://spack.readthedocs.io/{language}/latest", None)
}

# Todo
todo_include_todos = True

# Whether to activate handling of multi-version reference documentation.
versionswitch = @WANT_VERSION_SWITCH@

def setup(app):
    app.add_config_value("project_github_url", None, "env")
    app.add_config_value("versionswitch", False, "env")
    if versionswitch:
        app.add_js_file("version_switch.js")
