File    = table
Product = @product@
#*************************************************
# Starting Group definition
Group:

Flavor     = ANY
Qualifiers = "a5:debug"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir a5.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+debug)

Flavor     = ANY
Qualifiers = "a5:opt"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir a5.opt ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+opt)

Flavor     = ANY
Qualifiers = "a5:prof"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir a5.prof ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+prof)

Flavor     = ANY
Qualifiers = "e1:debug"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir e1.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+debug)

Flavor     = ANY
Qualifiers = "e1:opt"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir e1.opt ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+opt)

Flavor     = ANY
Qualifiers = "e1:prof"

  Action = GetFQDir
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir e1.prof ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")

  Action = GetExtraProducts
    setupRequired(cpp0x @CPP0X_VERSION@ -q +@CPP0X_BASE_QUAL@:+prof)

Common:
  Action = setup
    prodDir()
    setupEnv()
    setupRequired(cetpkgsupport)
    exeActionRequired(GetFQDir)
    envSet(${UPS_PROD_NAME_UC}_VERSION, @version@)
    prodDir( _FQ_DIR, ${${UPS_PROD_NAME_UC}_FQ} )

    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_INC,"")
    execute( "find-path include ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_INC)
    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_LIB,"")
    execute( "find-path lib ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_LIB)
    pathPrepend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})

    # add the bin directory to the path if it exists
    pathPrepend(PATH, ${UPS_PROD_DIR}/bin )
    pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_FQ_DIR}/bin )
    # dropit -E removes non-existent directories
    Execute(dropit -E, NO_UPS_ENV, PATH)

    # uncomment or add to this list as relevant
    exeActionRequired(GetExtraProducts)
    setupRequired(gcc   @GCC_VERSION@)

End:
# End Group definition
#*************************************************
